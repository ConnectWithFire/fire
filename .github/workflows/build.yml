# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "master" ]

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Install libraries
        run: |
          sudo gem install cocoapods

      - name: Write Api Keys
        run: |
          echo "FIRE_API_KEY=${{ secrets.FIRE_API_KEY }}" > .env

      - name: Download flutter package
        run: flutter pub get

      - name: Run Build Runner
        run: flutter pub run build_runner build

      - name: Config flutter
        run: flutter config --enable-macos-desktop

      - name: Build
        run: flutter build macos --no-tree-shake-icons --release
        
      - name: Archive Release (ARM64)
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'release-applesilicon.zip'
          directory: build/macos/Build/Intermediates.noindex/Runner.build/Release/Runner.build/Objects-normal/arm64/Binary

      - name: Archive Release (X86_64)
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'release-intel.zip'
          directory: build/macos/Build/Intermediates.noindex/Runner.build/Release/Runner.build/Objects-normal/x86_64/Binary

      - name: Upload Release (Archive)
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "macos-${{github.run_number}}"
          prerelease: false
          files: |
           build/macos/Build/Intermediates.noindex/Runner.build/Release/Runner.build/Objects-normal/arm64/Binary/release-applesilicon.zip
           build/macos/Build/Intermediates.noindex/Runner.build/Release/Runner.build/Objects-normal/x86_64/Binary/release-intel.zip

      - name: Upload Release (Latest)
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "macos-latest"
          prerelease: false
          files: |
           build/macos/Build/Intermediates.noindex/Runner.build/Release/Runner.build/Objects-normal/arm64/Binary/release-applesilicon.zip
           build/macos/Build/Intermediates.noindex/Runner.build/Release/Runner.build/Objects-normal/x86_64/Binary/release-intel.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Install libraries
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Write Api Keys
        run: |
          echo "FIRE_API_KEY=${{ secrets.FIRE_API_KEY }}" > .env

      - name: Download flutter package
        run: flutter pub get

      - name: Run Build Runner
        run: flutter pub run build_runner build

      - name: Config flutter
        run: flutter config --enable-linux-desktop

      - name: Build
        run: flutter build linux --release

      - name: Archive Release
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'release.zip'
          directory: build/linux/x64/release/bundle

      - name: Upload Release (Archive)
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "linux-${{github.run_number}}"
          prerelease: false
          files: |
            build/linux/x64/release/bundle/release.zip

      - name: Upload Release (Latest)
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "linux-latest"
          prerelease: false
          files: |
            build/linux/x64/release/bundle/release.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Write Api Keys
        run: |
          echo "FIRE_API_KEY=${{ secrets.FIRE_API_KEY }}" > .env

      - name: Download flutter package
        run: flutter pub get

      - name: Run Build Runner
        run: flutter pub run build_runner build

      - name: Config flutter
        run: flutter config --enable-windows-desktop

      - name: Build
        run: flutter build windows --release

      - name: Archive Release
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'release.zip'
          directory: build/windows/runner/Release

      - name: Upload Release (Archive)
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "windows-${{github.run_number}}"
          prerelease: false
          files: |
            build/windows/runner/Release/release.zip

      - name: Upload Release (Latest)
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "windows-latest"
          prerelease: false
          files: |
            build/windows/runner/Release/release.zip

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Write Api Keys
        run: |
          echo "FIRE_API_KEY=${{ secrets.FIRE_API_KEY }}" > .env

      - name: Download flutter package
        run: flutter pub get

      - name: Run Build Runner
        run: flutter pub run build_runner build

      - name: Build
        run: flutter build apk --no-tree-shake-icons --release

      - name: Upload Release (Archive)
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "android-${{github.run_number}}"
          prerelease: false
          files: |
            build/app/outputs/flutter-apk/app-release.apk

      - name: Upload Release (Latest)
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "android-latest"
          prerelease: false
          files: |
            build/app/outputs/flutter-apk/app-release.apk


  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Install libraries
        run: |
          sudo gem install cocoapods

      - name: Write Api Keys
        run: |
          echo "FIRE_API_KEY=${{ secrets.FIRE_API_KEY }}" > .env

      - name: Download flutter package
        run: flutter pub get

      - name: Run Build Runner
        run: flutter pub run build_runner build

      - name: Build
        run: flutter build ios --release --no-codesign
